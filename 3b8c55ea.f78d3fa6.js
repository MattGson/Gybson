(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{60:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return b}));var a=t(2),r=t(6),i=(t(0),t(75)),o={id:"installation",title:"Getting started",sidebar_label:"Getting started"},c={unversionedId:"installation",id:"installation",isDocsHomePage:!1,title:"Getting started",description:"Installing Gybson",source:"@site/docs/installation.md",permalink:"/Gybson/docs/installation",editUrl:"https://github.com/MattGson/Gybson/docs/docs/installation.md",sidebar_label:"Getting started",sidebar:"someSidebar",previous:{title:"Intro",permalink:"/Gybson/docs/"},next:{title:"Query API",permalink:"/Gybson/docs/querying"}},l=[{value:"Installing Gybson",id:"installing-gybson",children:[]},{value:"Generating the client",id:"generating-the-client",children:[{value:"About code gen",id:"about-code-gen",children:[]},{value:"Configuring code gen",id:"configuring-code-gen",children:[]}]},{value:"Using the client",id:"using-the-client",children:[{value:"Querying",id:"querying",children:[]},{value:"Closing the connection",id:"closing-the-connection",children:[]}]}],s={rightToc:l};function b(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"installing-gybson"},"Installing Gybson"),Object(i.b)("p",null,"Gybson has a peer dependency on relational-schema and Knex."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"npm i gybson relational-schema knex\n")),Object(i.b)("h2",{id:"generating-the-client"},"Generating the client"),Object(i.b)("h3",{id:"about-code-gen"},"About code gen"),Object(i.b)("p",null,"Gybson generates Typescript code from your database schema."),Object(i.b)("p",null,"It uses the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/MattGson/relational-schema"}),"relational-schema")," library as a peer dependency to generate a schema file from your database."),Object(i.b)("div",{className:"admonition admonition-important alert alert--info"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"important")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"We never recommend running the code gen against your production database. Instead you should run it against a local database with the same schema."))),Object(i.b)("h3",{id:"configuring-code-gen"},"Configuring code gen"),Object(i.b)("p",null,"First introspect your database using ",Object(i.b)("inlineCode",{parentName:"p"},"relations introspect"),". You can find the full docs ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://mattgson.github.io/relational-schema/"}),"here"),"\n(Note that only the CommonJS output format is currently supported)."),Object(i.b)("p",null,"Define a config file ",Object(i.b)("inlineCode",{parentName:"p"},"gybson.json")," in the root directory of your project."),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"schemaFile")," option specifies the relative path the the schema file generated by ",Object(i.b)("inlineCode",{parentName:"p"},"relational-schema"),"."),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"outdir")," option specifies where the client code files will be output.\nThis should be inside of your project source so that the files are transpiled as part of your build."),Object(i.b)("p",null,"You can optionally specify:"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"prettierConfig")," - a path to a prettier config to apply to generated code"),Object(i.b)("p",null,"example config:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n    "schemaFile": "src/lib/database/relational-schema.ts",\n    "outdir": "src/lib/database/",\n    "prettierConfig": "prettierrc.js"\n}\n')),Object(i.b)("p",null,"Run:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"gybson generate\n")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"using-the-client"},"Using the client"),Object(i.b)("p",null,"Gybson wraps a Knex instance."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),"import { knex } from 'knex';\nimport { GybsonClient } from '...my-outdir...';\n\nconst knexClient = knex({ ... });\n\nconst gybson = new GybsonClient(knexClient);\n\n")),Object(i.b)("p",null,"You can also pass options for:"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"logLevel")," - debug, info, warn, error.\n",Object(i.b)("inlineCode",{parentName:"p"},"logger")," - a custom logger to use instead."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),"const logger = new MyLogger();\n\nconst gybson = new GybsonClient(knexClient, { logger });\n")),Object(i.b)("h3",{id:"querying"},"Querying"),Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"We recommend creating a client on a per-request basis for stateless APIs i.e. GraphQL, REST.\nThis will ensure the cache is clean and no stale data is returned.\nSee ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/graphql/dataloader#caching-per-request"}),"DataLoader")," for more details"))),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),"import { GybsonClient } from '...my-outdir...';\n...\n\nconst client = new GybsonClient(knexInstance);\n\nconst id = await gybson.user.insert({\n    values: {\n        ...\n    },\n});\n\n")),Object(i.b)("p",null,"You can also import individual table clients like:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),"import { UserClient } from '...my-outdir...';\n\nconst userClient = new UserClient({ ... });\n\n\nconst user = await userClient.loadOne({ ... });\n\n")),Object(i.b)("p",null,"For a full list of query options see ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/Gybson/docs/querying"}),"Querying")),Object(i.b)("h3",{id:"closing-the-connection"},"Closing the connection"),Object(i.b)("p",null,"To close the connection pool, you can either destroy the knex instance or call:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),"gybson._close();\n")))}b.isMDXComponent=!0},75:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return m}));var a=t(0),r=t.n(a);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=r.a.createContext({}),b=function(e){var n=r.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=b(e.components);return r.a.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},u=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=b(t),u=a,m=p["".concat(o,".").concat(u)]||p[u]||d[u]||i;return t?r.a.createElement(m,c(c({ref:n},s),{},{components:t})):r.a.createElement(m,c({ref:n},s))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=u;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var s=2;s<i;s++)o[s]=t[s];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);