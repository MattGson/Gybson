/* Auto generated by relational-schema (https://github.com/MattGson/relational-schema) --- DO NOT MODIFY */

/* eslint-disable */

import { ClientEngine } from '../../src/query-client';
import schema from './relational-schema';
import Knex from 'knex';
import winston from 'winston';

import {
    QueryClient,
    Order,
    Enumerable,
    NumberWhere,
    NumberWhereNullable,
    StringWhere,
    StringWhereNullable,
    BooleanWhere,
    BooleanWhereNullable,
    DateWhere,
    DateWhereNullable,
    Loader,
} from '../../src/query-client';

import { postRelationFilter } from './Posts';
import { teamRelationFilter } from './Teams';
import { userRelationFilter } from './Users';
import { team_members_positionRelationFilter } from './TeamMembersPositions';

export interface team_memberDTO {
    team_id: number;
    user_id: number;
    member_post_id: number | null;
    deleted: boolean | null;
}

export interface team_memberRequiredRow {
    team_id: number;
    user_id: number;
    member_post_id?: number | null;
    deleted?: boolean | null;
}

export interface team_memberColumnMap {
    team_id: boolean;
    user_id: boolean;
    member_post_id: boolean;
    deleted: boolean;
}

export interface team_memberRelationFilter {
    existsWhere?: team_memberWhere;
    notExistsWhere?: team_memberWhere;
    whereEvery?: team_memberWhere;
}

export interface team_memberWhere {
    team_id?: number | NumberWhere;
    user_id?: number | NumberWhere;
    member_post_id?: number | NumberWhereNullable | null;
    deleted?: boolean | BooleanWhereNullable | null;

    AND?: Enumerable<team_memberWhere>;
    OR?: Enumerable<team_memberWhere>;
    NOT?: Enumerable<team_memberWhere>;

    member_post?: postRelationFilter | null;
    team?: teamRelationFilter | null;
    user?: userRelationFilter | null;
    team_members_position?: team_members_positionRelationFilter | null;
}

export interface team_memberLoadOneWhere {
    team_id__user_id?: {
        team_id: number;
        user_id: number;
    };
}

export interface team_memberLoadManyWhere {
    team_id?: number;
    user_id?: number;
    member_post_id?: number | null;
    deleted?: boolean | null;
}

export type team_memberOrderBy = {
    team_id?: Order;
    user_id?: Order;
    member_post_id?: Order;
    deleted?: Order;
};

export interface team_memberPaginate {
    limit?: number;
    afterCursor?: Partial<team_memberDTO>;
    beforeCursor?: Partial<team_memberDTO>;
    offset?: number;
}

export default class TeamMembers extends QueryClient<
    team_memberDTO,
    team_memberColumnMap,
    team_memberWhere,
    team_memberLoadOneWhere,
    team_memberLoadManyWhere,
    team_memberOrderBy,
    team_memberPaginate,
    team_memberRequiredRow
> {
    constructor(params: { knex: Knex<any, unknown>; logger: winston.Logger; engine: ClientEngine }) {
        const { knex, logger, engine } = params;
        super({
            tableName: 'team_members',
            schema: schema as any,
            knex,
            logger,
            engine,
        });
    }
}
