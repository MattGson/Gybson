/* Auto generated by relational-schema (https://github.com/MattGson/relational-schema) --- DO NOT MODIFY */

/* eslint-disable */

import { ClientEngine } from '../../src/query-client';
import schema from './relational-schema';
import Knex from 'knex';
import winston from 'winston';

import {
    QueryClient,
    Order,
    Enumerable,
    NumberWhere,
    NumberWhereNullable,
    StringWhere,
    StringWhereNullable,
    BooleanWhere,
    BooleanWhereNullable,
    DateWhere,
    DateWhereNullable,
    Loader,
} from '../../src/query-client';

import { team_memberRelationFilter } from './TeamMembers';

export interface team_members_positionDTO {
    team_id: number;
    user_id: number;
    position: string;
    manager: string;
    verified: boolean | null;
}

export interface team_members_positionRequiredRow {
    team_id: number;
    user_id: number;
    position: string;
    manager: string;
    verified?: boolean | null;
}

export interface team_members_positionColumnMap {
    team_id: boolean;
    user_id: boolean;
    position: boolean;
    manager: boolean;
    verified: boolean;
}

export interface team_members_positionRelationFilter {
    existsWhere?: team_members_positionWhere;
    notExistsWhere?: team_members_positionWhere;
    whereEvery?: team_members_positionWhere;
}

export interface team_members_positionWhere {
    team_id?: number | NumberWhere;
    user_id?: number | NumberWhere;
    position?: string | StringWhere;
    manager?: string | StringWhere;
    verified?: boolean | BooleanWhereNullable | null;

    AND?: Enumerable<team_members_positionWhere>;
    OR?: Enumerable<team_members_positionWhere>;
    NOT?: Enumerable<team_members_positionWhere>;

    team_member?: team_memberRelationFilter | null;
}

export interface team_members_positionLoadOneWhere {
    manager__position?: {
        manager: string;
        position: string;
    };
    team_id__user_id?: {
        team_id: number;
        user_id: number;
    };
}

export interface team_members_positionLoadManyWhere {
    team_id?: number;
    user_id?: number;
    position?: string;
    manager?: string;
    verified?: boolean | null;
}

export type team_members_positionOrderBy = {
    team_id?: Order;
    user_id?: Order;
    position?: Order;
    manager?: Order;
    verified?: Order;
};

export interface team_members_positionPaginate {
    limit?: number;
    afterCursor?: Partial<team_members_positionDTO>;
    beforeCursor?: Partial<team_members_positionDTO>;
    offset?: number;
}

export default class TeamMembersPositions extends QueryClient<
    team_members_positionDTO,
    team_members_positionColumnMap,
    team_members_positionWhere,
    team_members_positionLoadOneWhere,
    team_members_positionLoadManyWhere,
    team_members_positionOrderBy,
    team_members_positionPaginate,
    team_members_positionRequiredRow
> {
    constructor(params: { knex: Knex<any, unknown>; logger: winston.Logger; engine: ClientEngine }) {
        const { knex, logger, engine } = params;
        super({
            tableName: 'team_members_positions',
            schema: schema as any,
            knex,
            logger,
            engine,
        });
    }
}
